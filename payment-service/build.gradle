plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.palantir.docker" version "0.30.0"
    id "com.palantir.docker-run" version "0.30.0"
}

group = 'com.epam.amorozov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    jaxb
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.0")
}

docker {
    name "payment-service:${project.version}"
    copySpec.from(jar).rename(".*","payment-service.jar")
    files 'payment-service.jar'
    tag 'DockerHub', "rumoroz/gradle-payment-service:${project.version}"
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    clean true
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

task jaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.schema = "src/main/resources/xsd/payment.xsd"

    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

compileJava.dependsOn jaxb

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.6.1'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage'
    }

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.3.1'

    implementation 'wsdl4j:wsdl4j'
    implementation 'javax.xml.bind:jaxb-api'
    implementation 'org.glassfish.jaxb:jaxb-runtime'

    jaxb("org.glassfish.jaxb:jaxb-xjc")

    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

def fileName = 'payment-service'
bootJar{
    mainClass = 'com.epam.amorozov.paymentservice.PaymentServiceApplication'
    archiveName "${fileName}.jar"
}
